spring.application.name=demo

server.port=8080

tmdb.api.key=65df473f2313b93039c9585ec0c2f0ae
tmdb.api.url=https://api.themoviedb.org/3

# ---------------------------------------------------
# JPA
# ---------------------------------------------------
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=1000
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# ---------------------------------------------------
#JPA FOREIGN KEY PERMIT
# ---------------------------------------------------
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.database-platform = org.hibernate.dialect.MySQLDialect

# ---------------------------------------------------
#JPA SQL INIT
# ---------------------------------------------------
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# ---------------------------------------------------
# PAYH
# ---------------------------------------------------
spring.mvc.contentnegotiation.favor-path-extension=false
spring.mvc.contentnegotiation.favor-parameter=false
spring.mvc.contentnegotiation.media-types.json=application/json

#UTF-8 Setting
spring.servlet.filter.encoding.filter-name=encodingFilter
spring.servlet.filter.encoding.filter-class=org.springframework.web.filter.CharacterEncodingFilter
spring.servlet.filter.encoding.init-param.encoding=UTF-8
spring.servlet.filter.encoding.init-param.forceEncoding=true
spring.servlet.filter.encoding.url-pattern=/*

#----------------------------------------------------------------
# -dev.properties ??
#----------------------------------------------------------------
spring.profiles.active=dev

#----------------------------------------------------------------
# REDIS SERVER SETTING
#----------------------------------------------------------------
spring.redis.host=localhost
spring.redis.port=6379
#----------------------------------------------------------------
#DataSource Config
#----------------------------------------------------------------
spring.datasource.classname=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/moviedb
spring.datasource.username=root
spring.datasource.password=1234

# ----------------------------------------------------------------------------------------------------
#  OAUTH2 CLIENT OPTION
# ----------------------------------------------------------------------------------------------------
#----------------------------------------------------------------
# KAKAO AUTH
#----------------------------------------------------------------
#KAKAO
spring.security.oauth2.client.registration.kakao.client-id=a--
spring.security.oauth2.client.registration.kakao.client-secret=3--
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8090/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.kakao.logout.redirect.uri=http://localhost:8090/login

#KAKAO PROVIDER
spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute = id


# ---------------------------------------------------
# NAVER OAUTH
# ---------------------------------------------------
spring.security.oauth2.client.registration.naver.client-id=-
spring.security.oauth2.client.registration.naver.client-secret=a--
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8090/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.provider=naver

#NAVER PROVIDER
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response


# ---------------------------------------------------
# GOOGLE OAUTH
# ---------------------------------------------------
#Google
spring.security.oauth2.client.registration.google.client-id=--
spring.security.oauth2.client.registration.google.client-secret=--
spring.security.oauth2.client.registration.google.scope=email,profile


upload.path=uploads/
